import React from 'react';
import CardName from './CardName';
import CardHeader from './CardHeader';
import RestaurantData from './RestaurantData';
import Price from './Price'; 
import Rating from './Rating';
import Status from './Rating';

const renderRating = (rating) => {
  rating = Math.round(rating);
  const totalStars = 5;
  const filledStar = `
  <svg width="15px" height="14px" viewBox="0 0 15 14">
    <g id="Symbols" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
      <g id="Restaurant-Card" transform="translate(-82.000000, -73.000000)" fill="#918D88" fill-rule="nonzero">
        <g id="Rating" transform="translate(82.000000, 73.000000)">
          <path d="M10.3745245,8.71721518 L11.7895892,13.2718119 C11.865786,13.4993051 11.7875703,13.7505043 11.5962287,13.8928123 C11.4048872,14.0351203 11.1444562,14.0357854 10.9524063,13.8944566 L7.20221811,11.0361545 L3.45958771,13.8929106 C3.26706509,14.0331381 3.00696425,14.0313565 2.81633773,13.8885046 C2.62571122,13.7456527 2.54833174,13.494533 2.62497216,13.2674655 L4.02979632,8.72383689 L0.230165253,5.96456867 C0.0366055496,5.82417372 -0.0459814344,5.57400253 0.0253619281,5.34418165 C0.0967052906,5.11436077 0.305863918,4.95680229 0.544043931,4.95346026 L5.22484878,4.95346026 L6.68543321,0.384686635 C6.7558284,0.155884589 6.9652308,0 7.20218926,0 C7.43914772,0 7.64855012,0.155884589 7.71894532,0.384686635 L9.17952974,4.95346026 L13.8757386,4.95346026 C14.1140043,4.95681641 14.3232089,5.11449668 14.3944697,5.34443476 C14.4657305,5.57437285 14.3829389,5.82459089 14.1891846,5.96486037 L10.3745245,8.71721518 Z" id="Path"></path>
        </g>
      </g>
    </g>
  </svg>`
  const unfilledStar = `
  <svg width="15px" height="14px" viewBox="0 0 15 14">
    <g id="Symbols" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
      <g id="Restaurant-Card" transform="translate(-126.000000, -73.000000)" fill="#918D88" fill-rule="nonzero">
        <g id="Rating" transform="translate(82.000000, 73.000000)">
          <path d="M54.8450791,8.740728 C54.798029,8.77456632 54.7779014,8.83507167 54.7952007,8.89066663 L55.9603574,12.6290322 C56.0991005,13.061459 55.9456567,13.5347614 55.5803721,13.8011101 C55.2150874,14.0674587 54.7211719,14.0661805 54.3572484,13.7979448 L51.2431199,11.4318933 C51.2193182,11.4138027 51.1865069,11.4138027 51.1627053,11.4318933 L48.0587555,13.7939586 C47.6941665,14.0648112 47.1975743,14.0664508 46.8312333,13.7980115 C46.4648924,13.5295723 46.3131655,13.0528717 46.4561808,12.6196594 L47.6255853,8.84910828 C47.6341821,8.82139561 47.6241891,8.79124844 47.6007931,8.77431404 L44.4349694,6.48227578 C44.0606414,6.21062094 43.9069908,5.72384679 44.0567508,5.28405671 C44.2065108,4.84426663 44.6243294,4.55527643 45.0852323,4.57269279 L48.9341792,4.57269279 C48.9631332,4.57267189 48.9887764,4.55384562 48.9976827,4.52607095 L50.2159237,0.727993873 C50.3524981,0.294247157 50.7520704,-0.000307687604 51.2034685,2.41202535e-07 C51.6548665,0.000308170009 52.054043,0.295407895 52.1900351,0.729340547 L53.4075548,4.52628642 C53.416458,4.55405166 53.4420874,4.57287569 53.4710315,4.57290825 L57.3344851,4.57290825 C57.7956314,4.55542995 58.213642,4.84470777 58.3632141,5.28482448 C58.5127863,5.72494119 58.3585673,6.21187098 57.9836793,6.48316458 L54.8450791,8.740728 Z M57.0936421,5.65003157 L52.8392293,5.65003157 C52.7233488,5.65004897 52.6206697,5.57475103 52.5850017,5.46359809 L51.2662023,1.35099196 C51.2572832,1.32321265 51.2316212,1.30439422 51.2026588,1.30439422 C51.1736964,1.30439422 51.1480344,1.32321265 51.1391152,1.35099196 L49.8201556,5.46373276 C49.7844843,5.57485615 49.6818351,5.65013712 49.5659814,5.6501393 L45.3245258,5.6501393 C45.2955185,5.65013639 45.2698256,5.66900973 45.2609402,5.69684765 C45.2520548,5.72468557 45.2620086,5.75512286 45.2855741,5.77217485 L48.733303,8.26836881 C48.8267858,8.33608321 48.8667354,8.45655034 48.8324454,8.56733032 L47.559624,12.6711292 C47.5509896,12.6990424 47.5612107,12.7293832 47.584921,12.7462219 C47.6086313,12.7630605 47.6404111,12.7625482 47.6635752,12.7449539 L51.0416025,10.1743966 C51.1367793,10.1019941 51.2680245,10.1019391 51.3632609,10.1742619 L54.7503182,12.7478627 C54.7734985,12.7654754 54.8053089,12.7659779 54.8290253,12.749106 C54.8527416,12.7322341 54.8629335,12.7018509 54.8542427,12.6739303 L53.5723379,8.56108176 C53.5377422,8.44987975 53.5779688,8.32885786 53.6720413,8.26112371 L57.1324602,5.77220179 C57.1561262,5.75520107 57.1661727,5.72472438 57.1573079,5.69682457 C57.1484431,5.66892475 57.1227016,5.6500053 57.0936421,5.65003157 Z" id="Shape-Copy"></path>
        </g>
      </g>
    </g>
  </svg>
  `
  let starRating = '';
  for (let i = 0; i < rating; i++) {
    starRating += filledStar;
  }
  for (let i = 0; i < totalStars - rating; i++) {
    starRating += unfilledStar;
  }
  return starRating;
};

const renderStatus = (isOpen) => {
  return (`
    <svg width="18px" height="16px" viewBox="0 0 18 16">
      <defs>
        <linearGradient x1="23.5375122%" y1="-12.7174602%" x2="77.0481184%" y2="111.537063%" id="linearGradient-1">
            <stop stop-color="#C1E0B4" offset="0%"></stop>
            <stop stop-color="#87B162" offset="100%"></stop>
        </linearGradient>
        <linearGradient x1="23.5375122%" y1="-12.7174602%" x2="77.0481184%" y2="111.537063%" id="linearGradient-2">
            <stop stop-color="#F48C72" offset="0%"></stop>
            <stop stop-color="#B13131" offset="100%"></stop>
        </linearGradient>
      </defs>
      <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
      <g fill="url(${isOpen ? '#linearGradient-1' : '#linearGradient-2'})" fill-rule="nonzero">
        <g id="shop">
            <path d="M17.7494403,5.83000147 C17.2918523,6.58503725 16.4379067,7.03453386 15.5305428,6.99797619 C14.623179,6.96141851 13.8112501,6.44480385 13.4208218,5.6556015 C13.0153052,6.47677456 12.1550008,7.00001848 11.2103655,7.00001848 C10.2657301,7.00001848 9.40542573,6.47677456 8.99990911,5.6556015 C8.59443281,6.47677059 7.73415362,7.00002042 6.78953933,7.00002042 C5.84492503,7.00002042 4.98464584,6.47677059 4.57916954,5.6556015 C4.18874126,6.44480385 3.37681235,6.96141851 2.46944854,6.99797619 C1.56208472,7.03453386 0.708139117,6.58503725 0.250551085,5.83000147 C-0.0554472563,5.2988438 -0.0826559909,4.65974222 0.177165887,4.1062684 L1.65712957,0.808135547 C1.87917969,0.316589702 2.38343358,-0.000982910054 2.94031426,2.33224851e-06 L15.0596771,2.33224851e-06 C15.6165424,-0.000992841439 16.120786,0.316568786 16.3428272,0.808102213 L17.8228255,4.10623506 C18.082659,4.65971822 18.0554502,5.29883495 17.7494403,5.83000147 Z M4.32341226,12.0000006 C4.22777864,12.0000006 4.15025228,11.9253814 4.15025228,11.8333339 L4.15025228,10.8333341 C4.15025228,10.7412866 4.22777864,10.6666674 4.32341226,10.6666674 L13.6765791,10.6666674 C13.7722127,10.6666674 13.8497391,10.7412866 13.8497391,10.8333341 L13.8497391,11.8333339 C13.8497391,11.9253814 13.7722127,12.0000006 13.6765791,12.0000006 L4.32341226,12.0000006 Z M2.42028022,7.66666787 L3.11292013,7.66666787 C3.30418736,7.66666787 3.45924008,7.81590627 3.45924008,8.00000116 L3.45924008,12.0000006 C3.45924007,12.176852 3.5322477,12.3464566 3.66219531,12.4714875 C3.79214293,12.5965185 3.96838089,12.666729 4.15212241,12.6666671 L13.8480421,12.6666671 C14.2305766,12.6666671 14.540682,12.3681903 14.540682,12.0000006 L14.540682,8.00000116 C14.540682,7.81590627 14.6957348,7.66666787 14.887002,7.66666787 L15.5796419,7.66666787 C15.7709091,7.66666787 15.9259618,7.81590627 15.9259618,8.00000116 L15.9259618,14.6666668 C15.9259067,15.0203476 15.7798785,15.359521 15.5200028,15.6095704 C15.260127,15.8596198 14.907692,16.0000619 14.5402318,16 L3.45903229,16 C3.09168872,16.0000707 2.73936291,15.8596771 2.47956956,15.6097071 C2.21977622,15.359737 2.0737984,15.0206687 2.07375248,14.6671002 L2.07375248,8.00000116 C2.07375246,7.91156101 2.11026816,7.82674606 2.1752607,7.76422819 C2.24025324,7.70171032 2.32839446,7.66661481 2.42028022,7.66666787 Z" id="Shape"></path>
          </g>
        </g>
      </g>
    </svg>
    <span style="margin-left: 0.325em; margin-top: 1px; font-weight: 600; font-size: 0.6875em; font-family: 'Avenir Next', 'Avenir', -apple-system, BlinkMacSystemFont, 'Segoe UI'; text-transform: uppercase; letter-spacing: 0.055em; color: ${isOpen ? '#84AC61' : '#C34A43'};">${isOpen ? 'Open' : 'Closed'}</span>
  `)
};

const RestaurantComponent  = ({ _id, name, rating, displayAddress, price, reviewCount, deleteLikeMutation, getLikesQuery, userId, longitude, latitude }) => {
  let isOpen = true;
  return (
    <article>
      <CardHeader>
        <CardName>{name}</CardName>
          <svg className="unlike" onClick={() => {
            deleteLikeMutation({
              variables: {
                user_id: parseInt(userId),
                rest_id: parseInt(_id)
              },
              refetchQueries: [{ query: getLikesQuery }]
            });
          }
          } width="21px" height="19px" viewBox="0 0 21 19">
            <g id="Symbols" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" fill-opacity="0.340745192">
              <g id="Restaurant-Card" transform="translate(-291.000000, -31.000000)" fill="#EA8984" fill-rule="nonzero" stroke="#E09797">
                <g id="heart-copy" transform="translate(292.000000, 32.000000)">
                  <path d="M4.96612185,0.461538462 C6.95091332,0.478241334 8.73440386,1.64833414 9.49988161,3.43599755 C10.265396,1.64832876 12.0489099,0.478241057 14.0337205,0.461538462 C16.8226383,0.50802882 19.0453498,2.75187757 18.9992971,5.47433619 C18.9992971,11.9160998 11.0936062,17.4615385 9.49988161,17.4615385 C7.90615702,17.4615385 0.000703598015,11.9160998 0.000703598015,5.47433619 C-0.0453715262,2.75192842 2.17725687,0.508091937 4.96612185,0.461538462 Z" id="Path"></path>
                </g>
              </g>
            </g>
          </svg>
      </CardHeader>
      <RestaurantData>
        <Price>{price}</Price>
        <Rating dangerouslySetInnerHTML={{__html: renderRating(rating)}}></Rating>
        <Status isOpen={isOpen} dangerouslySetInnerHTML={{__html: renderStatus(_id % 2 === 0)} /* Randomly sets open status */} /> 
      </RestaurantData>
    </article>
   );
}

export default RestaurantComponent; 